{
  "timestamp": "2025-09-14T12:52:52.380Z",
  "aiModel": "ep-20250728192938-68tdn",
  "rawResponse": "{\n  \"smartwatch-shop/package.json\": \"{\n  \\\"name\\\": \\\"smartwatch-shop\\\",\n  \\\"private\\\": true,\n  \\\"version\\\": \\\"0.0.0\\\",\n  \\\"type\\\": \\\"module\\\",\n  \\\"scripts\\\": {\n    \\\"dev\\\": \\\"vite\\\",\n    \\\"build\\\": \\\"vite build\\\",\n    \\\"preview\\\": \\\"vite preview\\\"\n  },\n  \\\"dependencies\\\": {\n    \\\"vue\\\": \\\"^3.5.0\\\",\n    \\\"element-plus\\\": \\\"^2.10.0\\\",\n    \\\"vue-router\\\": \\\"^4.4.0\\\"\n  },\n  \\\"devDependencies\\\": {\n    \\\"vite\\\": \\\"^6.0.0\\\",\n    \\\"@vitejs/plugin-vue\\\": \\\"^5.1.0\\\",\n    \\\"sass\\\": \\\"^1.77.0\\\"\n  }\n}\",\n  \"smartwatch-shop/index.html\": \"<!DOCTYPE html>\n<html lang=\\\"zh-CN\\\">\n  <head>\n    <meta charset=\\\"UTF-8\\\" />\n    <link rel=\\\"icon\\\" type=\\\"image/svg+xml\\\" href=\\\"/favicon.ico\\\" />\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\" />\n    <title>智能手表 - 科技改变生活</title>\n    <!-- 引入Element Plus图标 -->\n    <link rel=\\\"stylesheet\\\" href=\\\"https://cdn.jsdelivr.net/npm/@element-plus/icons-vue@2.3.1/dist/index.css\\\">\n  </head>\n  <body>\n    <div id=\\\"app\\\"></div>\n    <script type=\\\"module\\\" src=\\\"/src/main.js\\\"></script>\n  </body>\n</html>\",\n  \"smartwatch-shop/vite.config.js\": \"import { defineConfig } from 'vite'\nimport vue from '@vitejs/plugin-vue'\nimport path from 'path'\n\n// https://vitejs.dev/config/\nexport default defineConfig({\n  plugins: [vue()],\n  resolve: {\n    alias: {\n      '@': path.resolve(__dirname, './src'),\n    },\n  },\n  server: {\n    port: 3000,\n    open: true\n  }\n})\",\n  \"smartwatch-shop/src/main.js\": \"import { createApp } from 'vue'\nimport App from './App.vue'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport './style/main.css'\n\n// 导入Element Plus图标\nimport * as ElementPlusIconsVue from '@element-plus/icons-vue'\n\nconst app = createApp(App)\n\n// 注册所有Element Plus图标\nfor (const [key, component] of Object.entries(ElementPlusIconsVue)) {\n  app.component(key, component)\n}\n\napp.use(ElementPlus)\napp.mount('#app')\",\n  \"smartwatch-shop/src/App.vue\": \"<template>\n  <div class=\\\"app-container\\\">\n    <!-- 顶部导航栏 -->\n    <nav-bar />\n    \n    <main class=\\\"product-detail-container\\\">\n      <div class=\\\"product-main\\\">\n        <!-- 产品轮播图 -->\n        <product-gallery :images=\\\"product.images\\\" />\n        \n        <!-- 产品信息区域 -->\n        <div class=\\\"product-info-container\\\">\n          <product-info \n            :name=\\\"product.name\\\" \n            :price=\\\"product.price\\\" \n            :original-price=\\\"product.originalPrice\\\" \n            :sales-count=\\\"product.salesCount\\\" \n          />\n          \n          <!-- 规格选择器 -->\n          <specification-selector \n            :specifications=\\\"product.specifications\\\" \n            v-model:selected-specs=\\\"selectedSpecs\\\" \n            @stock-change=\\\"updateStock\\\"\n          />\n          \n          <!-- 库存提示 -->\n          <div class=\\\"stock-info\\\" v-if=\\\"selectedSpecs.size && selectedSpecs.color\\\">\n            库存: <span class=\\\"stock-count\\\">{{ currentStock }}件</span>\n          </div>\n        </div>\n      </div>\n      \n      <!-- 产品详情标签页 -->\n      <product-tabs>\n        <!-- 产品参数 -->\n        <template #parameters>\n          <parameter-table :parameters=\\\"product.parameters\\\" />\n        </template>\n        \n        <!-- 使用场景 -->\n        <template #scenarios>\n          <scenario-gallery :images=\\\"product.scenarioImages\\\" />\n        </template>\n        \n        <!-- 用户评价 -->\n        <template #reviews>\n          <review-list :reviews=\\\"product.reviews\\\" />\n        </template>\n      </product-tabs>\n    </main>\n  </div>\n  \n  <!-- 底部操作栏 -->\n  <action-bar \n    :quantity=\\\"quantity\\\" \n    @quantity-change=\\\"updateQuantity\\\"\n    @add-to-cart=\\\"addToCart\\\"\n    @buy-now=\\\"buyNow\\\"\n  />\n  \n  <!-- 售后保障 -->\n  <after-sale-service :services=\\\"afterSaleServices\\\" />\n</template>\n\n<script setup>\nimport { ref, reactive } from 'vue'\nimport NavBar from './components/NavBar.vue'\nimport ProductGallery from './components/ProductGallery.vue'\nimport ProductInfo from './components/ProductInfo.vue'\nimport SpecificationSelector from './components/SpecificationSelector.vue'\nimport ProductTabs from './components/ProductTabs.vue'\nimport ParameterTable from './components/ParameterTable.vue'\nimport ScenarioGallery from './components/ScenarioGallery.vue'\nimport ReviewList from './components/ReviewList.vue'\nimport ActionBar from './components/ActionBar.vue'\nimport AfterSaleService from './components/AfterSaleService.vue'\n\n// 产品数据\nconst product = reactive({\n  name: 'Ultra智能手表 Series 8 - 全场景健康监测',\n  price: 1599,\n  originalPrice: 1899,\n  salesCount: 1258,\n  images: [\n    'https://picsum.photos/id/1/600/600',\n    'https://picsum.photos/id/2/600/600',\n    'https://picsum.photos/id/3/600/600',\n    'https://picsum.photos/id/4/600/600',\n    'https://picsum.photos/id/5/600/600'\n  ],\n  specifications: {\n    color: [\n      { name: '星空黑', value: 'black', stock: 120 },\n      { name: '月光银', value: 'silver', stock: 85 },\n      { name: '深空灰', value: 'gray', stock: 42 }\n    ],\n    size: [\n      { name: '42mm', value: '42mm', stock: 150 },\n      { name: '46mm', value: '46mm', stock: 97 }\n    ]\n  },\n  parameters: [\n    { name: '品牌', value: 'Ultra' },\n    { name: '型号', value: 'Series 8' },\n    { name: '屏幕尺寸', value: '1.78英寸AMOLED' },\n    { name: '分辨率', value: '454 x 454像素' },\n    { name: '处理器', value: '双核处理器' },\n    { name: '内存', value: '1GB RAM' },\n    { name: '存储', value: '32GB' },\n    { name: '电池容量', value: '300mAh' },\n    { name: '续航时间', '常规使用7天，重度使用3天' },\n    { name: '防水等级', '50米防水' },\n    { name: '连接方式', '蓝牙5.2，Wi-Fi' },\n    { name: '传感器', '心率传感器，血氧传感器，加速度传感器，陀螺仪' },\n    { name: '操作系统', 'WatchOS 10' },\n    { name: '兼容系统', 'iOS 14.0+，Android 8.0+' }\n  ],\n  scenarioImages: [\n    'https://picsum.photos/id/10/1200/800',\n    'https://picsum.photos/id/11/1200/800',\n    'https://picsum.photos/id/12/1200/800',\n    'https://picsum.photos/id/13/1200/800'\n  ],\n  reviews: [\n    {\n      id: 1,\n      user: '张先生',\n      avatar: 'https://picsum.photos/id/20/100/100',\n      rating: 5,\n      date: '2023-10-15',\n      content: '手表非常漂亮，功能强大，续航也不错，充一次电用了5天还有30%的电。健康监测功能很准，推荐购买！',\n      images: [\n        'https://picsum.photos/id/30/400/400',\n        'https://picsum.photos/id/31/400/400'\n      ]\n    },\n    {\n      id: 2,\n      user: '李女士',\n      avatar: 'https://picsum.photos/id/21/100/100',\n      rating: 4,\n      date: '2023-10-10',\n      content: '外观时尚，操作流畅，就是表带有点硬，戴久了不太舒服。整体来说性价比很高。',\n      images: [\n        'https://picsum.photos/id/32/400/400'\n      ]\n    },\n    {\n      id: 3,\n      user: '王先生',\n      avatar: 'https://picsum.photos/id/22/100/100',\n      rating: 5,\n      date: '2023-10-05',\n      content: '功能齐全，心率、血氧监测都很准，运动模式也很多。睡眠监测帮我改善了睡眠质量，非常满意！',\n      images: []\n    }\n  ]\n})\n\n// 状态管理\nconst selectedSpecs = ref({\n  color: '',\n  size: ''\n})\nconst currentStock = ref(0)\nconst quantity = ref(1)\nconst afterSaleServices = [\n  { icon: 'Clock', title: '7天无理由退货', description: '收到商品7天内，不影响二次销售可退货' },\n  { icon: 'RefreshRight', title: '15天质量问题换货', description: '15天内出现质量问题，可免费更换新机' },\n  { icon: 'Truck', title: '全国联保', description: '官方授权服务中心，全国联保1年' },\n  { icon: 'Help', title: '专业客服', description: '7×24小时在线客服，随时解答疑问' }\n]\n\n// 方法\nfunction updateStock(stock) {\n  currentStock.value = stock\n}\n\nfunction updateQuantity(count) {\n  if (count > currentStock.value && currentStock.value > 0) {\n    quantity.value = currentStock.value\n    return\n  }\n  quantity.value = count\n}\n\nfunction addToCart() {\n  if (!selectedSpecs.value.color || !selectedSpecs.value.size) {\n    ElMessage.warning('请选择产品规格')\n    return\n  }\n  \n  if (quantity.value > currentStock.value) {\n    ElMessage.warning('购买数量不能超过库存')\n    return\n  }\n  \n  ElMessage.success('已加入购物车')\n  // 实际项目中这里会调用购物车API\n}\n\nfunction buyNow() {\n  if (!selectedSpecs.value.color || !selectedSpecs.value.size) {\n    ElMessage.warning('请选择产品规格')\n    return\n  }\n  \n  if (quantity.value > currentStock.value) {\n    ElMessage.warning('购买数量不能超过库存')\n    return\n  }\n  \n  ElMessage.info('跳转到结算页面')\n  // 实际项目中这里会跳转到结算页面\n}\n</script>\n\n<style scoped>\n.app-container {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n}\n\n.product-detail-container {\n  flex: 1;\n  width: 1200px;\n  margin: 0 auto;\n  padding: 20px 0;\n}\n\n.product-main {\n  display: flex;\n  gap: 30px;\n  margin-bottom: 40px;\n}\n\n.product-info-container {\n  flex: 1;\n}\n\n.stock-info {\n  margin: 15px 0;\n  color: #606266;\n  font-size: 14px;\n}\n\n.stock-count {\n  color: #409EFF;\n  font-weight: 500;\n}\n\n@media (max-width: 1200px) {\n  .product-detail-container {\n    width: 100%;\n    padding: 20px;\n  }\n}\n\n@media (max-width: 768px) {\n  .product-main {\n    flex-direction: column;\n  }\n}\n</style>\",\n  \"smartwatch-shop/src/components/NavBar.vue\": \"<template>\n  <header class=\\\"navbar-container\\\">\n    <div class=\\\"navbar-content\\\">\n      <!-- 品牌Logo -->\n      <div class=\\\"brand-logo\\\">\n        <h1>UltraWatch</h1>\n      </div>\n      \n      <!-- 导航菜单 -->\n      <nav class=\\\"main-nav\\\">\n        <ul class=\\\"nav-list\\\">\n          <li class=\\\"nav-item\\\"><a href=\\\"#\\\" class=\\\"nav-link active\\\">首页</a></li>\n          <li class=\\\"nav-item\\\"><a href=\\\"#\\\" class=\\\"nav-link\\\">全部产品</a></li>\n          <li class=\\\"nav-item\\\"><a href=\\\"#\\\" class=\\\"nav-link\\\">新品上市</a></li>\n          <li class=\\\"nav-item\\\"><a href=\\\"#\\\" class=\\\"nav-link\\\">优惠活动</a></li>\n          <li class=\\\"nav-item\\\"><a href=\\\"#\\\" class=\\\"nav-link\\\">支持</a></li>\n        </ul>\n      </nav>\n      \n      <!-- 右侧功能区 -->\n      <div class=\\\"nav-actions\\\">\n        <!-- 搜索框 -->\n        <div class=\\\"search-box\\\">\n          <el-input \n            placeholder=\\\"搜索产品...\\\" \n            size=\\\"small\\\" \n            prefix-icon=\\\"Search\\\"\n            class=\\\"search-input\\\"\n          />\n        </div>\n        \n        <!-- 购物车图标 -->\n        <div class=\\\"cart-icon\\\">\n          <el-badge :value=\\\"cartCount\\\" class=\\\"cart-badge\\\">\n            <el-icon class=\\\"icon\\\"><ShoppingCart /></el-icon>\n          </el-badge>\n        </div>\n        \n        <!-- 用户中心 -->\n        <div class=\\\"user-icon\\\">\n          <el-icon class=\\\"icon\\\"><User /></el-icon>\n        </div>\n      </div>\n    </div>\n  </header>\n</template>\n\n<script setup>\nimport { ref } from 'vue'\nimport { ShoppingCart, User, Search } from '@element-plus/icons-vue'\n\nconst cartCount = ref(3)\n</script>\n\n<style scoped>\n.navbar-container {\n  background-color: #fff;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  position: sticky;\n  top: 0;\n  z-index: 100;\n}\n\n.navbar-content {\n  width: 1200px;\n  margin: 0 auto;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: 60px;\n  padding: 0 20px;\n}\n\n.brand-logo {\n  font-size: 24px;\n  font-weight: 700;\n  color: #1a73e8;\n}\n\n.nav-list {\n  display: flex;\n  list-style: none;\n  padding: 0;\n  margin: 0;\n}\n\n.nav-item {\n  margin: 0 15px;\n}\n\n.nav-link {\n  text-decoration: none;\n  color: #333;\n  font-size: 14px;\n  font-weight: 500;\n  padding: 5px 0;\n  position: relative;\n}\n\n.nav-link.active {\n  color: #1a73e8;\n}\n\n.nav-link.active::after {\n  content: '';\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 2px;\n  background-color: #1a73e8;\n}\n\n.nav-link:hover {\n  color: #1a73e8;\n}\n\n.nav-actions {\n  display: flex;\n  align-items: center;\n  gap: 20px;\n}\n\n.search-box {\n  width: 200px;\n}\n\n.search-input {\n  --el-input-height: 32px;\n}\n\n.cart-icon, .user-icon {\n  cursor: pointer;\n  color: #606266;\n  position: relative;\n}\n\n.icon {\n  font-size: 20px;\n}\n\n.cart-badge {\n  --el-badge-height: 18px;\n  --el-badge-font-size: 12px;\n}\n\n@media (max-width: 1200px) {\n  .navbar-content {\n    width: 100%;\n  }\n}\n\n@media (max-width: 768px) {\n  .main-nav {\n    display: none;\n  }\n  \n  .search-box {\n    width: 120px;\n  }\n}\n</style>\",\n  \"smartwatch-shop/src/components/ProductGallery.vue\": \"<template>\n  <div class=\\\"product-gallery\\\">\n    <el-carousel \n      :interval=\\\"5000\\\" \n      height=\\\"500px\\\" \n      indicator-position=\\\"right\\\"\n      class=\\\"main-carousel\\\"\n    >\n      <el-carousel-item v-for=\\\"(image, index) in images\\\" :key=\\\"index\\\">\n        <img \n          :src=\\\"image\\\" \n          alt=\\\"产品图片\\\" \n          class=\\\"product-image\\\"\n          @click=\\\"openPreview(index)\\\"\n        />\n      </el-carousel-item>\n    </el-carousel>\n    \n    <!-- 预览弹窗 -->\n    <el-dialog \n      v-model=\\\"previewVisible\\\" \n      :fullscreen=\\\"true\\\" \n      :show-close=\\\"true\\\"\n      class=\\\"image-preview-dialog\\\"\n    >\n      <el-carousel \n        v-if=\\\"previewVisible\\\"\n        :interval=\\\"0\\\" \n        height=\\\"100%\\\"\n        :initial-index=\\\"previewIndex\\\"\n      >\n        <el-carousel-item v-for=\\\"(image, index) in images\\\" :key=\\\"index\\\">\n          <img :src=\\\"image\\\" alt=\\\"产品图片\\\" class=\\\"preview-image\\\" />\n        </el-carousel-item>\n      </el-carousel>\n    </el-dialog>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue'\n\nconst props = defineProps({\n  images: {\n    type: Array,\n    required: true,\n    default: () => []\n  }\n})\n\nconst previewVisible = ref(false)\nconst previewIndex = ref(0)\n\nfunction openPreview(index) {\n  previewIndex.value = index\n  previewVisible.value = true\n}\n</script>\n\n<style scoped>\n.product-gallery {\n  width: 500px;\n  flex-shrink: 0;\n}\n\n.main-carousel {\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);\n}\n\n.product-image {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  cursor: zoom-in;\n  transition: transform 0.3s ease;\n}\n\n.product-image:hover {\n  transform: scale(1.02);\n}\n\n.image-preview-dialog {\n  padding: 0;\n  background-color: rgba(0, 0, 0, 0.9);\n}\n\n.preview-image {\n  width: 100%;\n  height: 100%;\n  object-fit: contain;\n}\n\n@media (max-width: 768px) {\n  .product-gallery {\n    width: 100%;\n  }\n  \n  .main-carousel {\n    height: 300px;\n  }\n}\n</style>\",\n  \"smartwatch-shop/src/components/ProductInfo.vue\": \"<template>\n  <div class=\\\"product-info\\\">\n    <h1 class=\\\"product-name\\\">{{ name }}</h1>\n    \n    <div class=\\\"product-price\\\">\n      <span class=\\\"current-price\\\">¥{{ price.toFixed(2) }}</span>\n      <span class=\\\"original-price\\\" v-if=\\\"originalPrice\\\">¥{{ originalPrice.toFixed(2) }}</span>\n    </div>\n    \n    <div class=\\\"product-meta\\\">\n      <span class=\\\"sales-count\\\">已售 {{ formatSalesCount(salesCount) }}件</span>\n      <span class=\\\"separator\\\">|</span>\n      <span class=\\\"rating\\\">\n        <el-rate v-model=\"ratingValue\" disabled :max=\"5\" :allow-half=\"true\" size=\"small\" />\n        <span class=\"rating-text\">(4.9)</span>\n      </span>\n      <span class=\"separator\">|</span>\n      <span class=\"store-name\">Ultra官方旗舰店</span>\n    </div>\n    \n    <div class=\\\"product-tags\\\">\n      <el-tag type=\\\"primary\\\" size=\\\"small\\\">新品</el-tag>\n      <el-tag type=\\\"success\\\" size=\\\"small\\\">限时优惠</el-tag>\n      <el-tag type=\\\"info\\\" size=\\\"small\\\">赠运费险</el-tag>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue'\n\nconst props = defineProps({\n  name: {\n    type: String,\n    required: true\n  }, \n  price: {\n    type: Number,\n    required: true\n  },\n  originalPrice: {\n    type: Number,\n    required: false\n  },\n  salesCount: {\n    type: Number,\n    required: false,\n    default: 0\n  }\n})\n\nconst ratingValue = ref(4.9)\n\nfunction formatSalesCount(count) {\n  if (count >= 10000) {\n    return (count / 10000).toFixed(1) + '万'\n  }\n  return count\n}\n</script>\n\n<style scoped>\n.product-info {\n  margin-bottom: 25px;\n}\n\n.product-name {\n  font-size: 24px;\n  color: #333;\n  margin-bottom: 15px;\n  line-height: 1.3;\n}\n\n.product-price {\n  margin-bottom: 15px;\n  display: flex;\n  align-items: center;\n  gap: 15px;\n}\n\n.current-price {\n  font-size: 28px;\n  font-weight: 700;\n  color: #f56c6c;\n}\n\n.original-price {\n  font-size: 16px;\n  color: #909399;\n  text-decoration: line-through;\n}\n\n.product-meta {\n  font-size: 14px;\n  color: #606266;\n  margin-bottom: 15px;\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 10px 15px;\n}\n\n.separator {\n  color: #e0e0e0;\n}\n\n.rating {\n  display: flex;\n  align-items: center;\n  gap: 5px;\n}\n\n.rating-text {\n  color: #606266;\n}\n\n.store-name {\n  color: #409eff;\n  cursor: pointer;\n}\n\n.product-tags {\n  margin-top: 15px;\n  display: flex;\n  gap: 8px;\n}\n</style>\",\n  \"smartwatch-shop/src/components/SpecificationSelector.vue\": \"<template>\n  <div class=\\\"specification-selector\\\">\n    <div class=\\\"spec-group\\\" v-for=\\\"(specGroup, index) in specifications\\\" :key=\\\"index\\\">\n      <h3 class=\\\"spec-title\\\">{{ getSpecGroupName(specGroup.name) }}:</h3>\n      <div class=\\\"spec-options\\\">\n        <div \n          v-for=\\\"option in specGroup.options\\\" \n          :key=\\\"option.value\\\"\n          class=\\\"spec-option\\\"\n          :class=\\\"{ \n            'selected': isSelected(specGroup.name, option.value),\n            'disabled': !option.stock \n          }\\\"\n          @click=\\\"selectOption(specGroup.name, option.value)\\\"\n          v-if=\\\"option.stock > 0 || showOutOfStock\\\"\n        >\n          <span class=\\\"option-text\\\">{{ option.name }}</span>\n          <span class=\\\"stock-indicator\\\" v-if=\\\"!option.stock\\\">缺货</span>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { computed, watch } from 'vue'\n\nconst props = defineProps({\n  specifications: {\n    type: Object,\n    required: true\n  },\n  modelValue: {\n    type: Object,\n    required: true,\n    default: () => ({})\n  },\n  showOutOfStock: {\n    type: Boolean,\n    default: false\n  }\n})\n\nconst emit = defineEmits(['update:modelValue', 'stock-change'])\n\n// 计算属性，用于获取当前选中的规格\nconst selectedSpecs = computed({\n  get: () => props.modelValue,\n  set: (value) => {\n    emit('update:modelValue', value)\n  }\n})\n\n// 监听选中规格变化，更新库存信息\nwatch(\n  () => selectedSpecs.value,\n  (newVal) => {\n    // 在实际项目中，这里应该根据选中的规格组合查询库存\n    // 简化处理：假设每个规格选项的stock就是该规格的库存\n    let stock = 0\n    if (newVal.color && newVal.size) {\n      const colorOption = props.specifications.color.find(o => o.value === newVal.color)\n      const sizeOption = props.specifications.size.find(o => o.value === newVal.size)\n      // 取两个规格中库存较小的那个\n      stock = Math.min(colorOption.stock, sizeOption.stock)\n    }\n    emit('stock-change', stock)\n  },\n  { deep: true }\n)\n\n// 辅助方法\nfunction getSpecGroupName(key) {\n  const names = {\n    color: '颜色',\n    size: '尺寸'\n  }\n  return names[key] || key\n}\n\nfunction isSelected(groupName, value) {\n  return selectedSpecs.value[groupName] === value\n}\n\nfunction selectOption(groupName, value) {\n  const specGroup = props.specifications[groupName]\n  const option = specGroup.options.find(o => o.value === value)\n  \n  // 如果选项缺货，不允许选择\n  if (!option.stock) return\n  \n  // 更新选中的规格\n  selectedSpecs.value = {\n    ...selectedSpecs.value,\n    [groupName]: value\n  }\n}\n</script>\n\n<style scoped>\n.specification-selector {\n  margin: 25px 0;\n}\n\n.spec-group {\n  margin-bottom: 20px;\n}\n\n.spec-title {\n  font-size: 14px;\n  color: #606266;\n  margin-bottom: 10px;\n  font-weight: 500;\n}\n\n.spec-options {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n}\n\n.spec-option {\n  border: 1px solid #e0e0e0;\n  border-radius: 4px;\n  padding: 8px 15px;\n  font-size: 14px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  position: relative;\n  min-width: 60px;\n  text-align: center;\n}\n\n.spec-option:hover:not(.disabled) {\n  border-color: #409eff;\n}\n\n.spec-option.selected {\n  border-color: #409eff;\n  background-color: rgba(64, 158, 255, 0.05);\n  color: #409eff;\n  font-weight: 500;\n}\n\n.spec-option.selected::after {\n  content: '';\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  width: 16px;\n  height: 16px;\n  background: url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1024 1024'%3E%3Cpath fill='%23409eff' d='M816 320c17.7 0 32 14.3 32 32v448c0 17.7-14.3 32-32 32H208c-17.7 0-32-14.3-32-32V352c0-17.7 14.3-32 32-32h608zM470.6 685.4l-94.3-91.1c-1.5-1.4-3.6-2.3-5.9-2.3-2.3 0-4.4 0.9-5.9 2.3L192 785.4V832h640v-46.6L617.4 685.4z'/%3E%3C/svg%3E\\\") no-repeat;\n  background-size: contain;\n}\n\n.spec-option.disabled {\n  color: #c0c4cc;\n  cursor: not-allowed;\n  background-color: #f5f5f5;\n}\n\n.stock-indicator {\n  position: absolute;\n  top: 0;\n  right: 0;\n  background-color: #f5f5f5;\n  color: #c0c4cc;\n  font-size: 10px;\n  padding: 0 4px;\n  border-radius: 0 0 0 4px;\n}\n</style>\",\n  \"smartwatch-shop/src/components/ProductTabs.vue\": \"<template>\n  <div class=\\\"product-tabs\\\">\n    <el-tabs v-model=\\\"activeTab\\\" class=\\\"detail-tabs\\\" @tab-change=\\\"handleTabChange\\\">\n      <el-tab-pane label=\\\"产品参数\\\" name=\\\"parameters\\\" class=\\\"tab-pane\\\" />\n      <el-tab-pane label=\\\"使用场景\\\" name=\\\"scenarios\\\" class=\\\"tab-pane\\\" />\n      <el-tab-pane label=\\\"用户评价\\\" name=\\\"reviews\\\" class=\\\"tab-pane\\\" />\n    </el-tabs>\n    \n    <div class=\\\"tab-content\\\">\n      <slot name=\\\"parameters\\\" v-if=\\\"activeTab === 'parameters'\\\" />\n      <slot name=\\\"scenarios\\\" v-if=\\\"activeTab === 'scenarios'\\\" />\n      <slot name=\\\"reviews\\\" v-if=\\\"activeTab === 'reviews'\\\" />\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue'\n\nconst activeTab = ref('parameters')\n\nfunction handleTabChange(tab) {\n  activeTab.value = tab\n  // 滚动到标签页内容顶部\n  document.querySelector('.tab-content').scrollIntoView({ behavior: 'smooth' })\n}\n</script>\n\n<style scoped>\n.product-tabs {\n  margin-top: 40px;\n  border-top: 1px solid #f0f0f0;\n}\n\n.detail-tabs {\n  margin-top: 20px;\n}\n\n.el-tabs__nav {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  border-bottom: 1px solid #e0e0e0;\n}\n\n.el-tabs__item {\n  padding: 15px 30px;\n  font-size: 16px;\n  font-weight: 500;\n}\n\n.el-tabs__item.is-active {\n  color: #1a73e8;\n}\n\n.el-tabs__active-bar {\n  background-color: #1a73e8;\n  height: 3px;\n}\n\n.tab-content {\n  padding: 30px 20px;\n}\n</style>\",\n  \"smartwatch-shop/src/components/ParameterTable.vue\": \"<template>\n  <div class=\\\"parameter-table\\\">\n    <el-table :data=\"formattedParameters\" border style=\"width: 100%\">\n      <el-table-column prop=\"name\" label=\"参数名称\" width=\"30%\" />\n      <el-table-column prop=\"value\" label=\"参数值\" width=\"70%\" />\n    </el-table>\n  </div>\n</template>\n\n<script setup>\nimport { computed } from 'vue'\n\nconst props = defineProps({\n  parameters: {\n    type: Array,\n    required: true,\n    default: () => []\n  }\n})\n\nconst formattedParameters = computed(() => {\n  // 将参数数组转换为表格需要的格式\n  return props.parameters.map(param => ({\n    name: param.name,\n    value: param.value\n  }))\n})\n</script>\n\n<style scoped>\n.parameter-table {\n  margin-top: 20px;\n}\n\n.el-table {\n  border-radius: 4px;\n}\n\n.el-table th {\n  background-color: #f5f7fa;\n  font-weight: 500;\n}\n\n.el-table td, .el-table th {\n  padding: 12px",
  "extractedCode": "{\n  \"smartwatch-shop/package.json\": \"{\n  \\\"name\\\": \\\"smartwatch-shop\\\",\n  \\\"private\\\": true,\n  \\\"version\\\": \\\"0.0.0\\\",\n  \\\"type\\\": \\\"module\\\",\n  \\\"scripts\\\": {\n    \\\"dev\\\": \\\"vite\\\",\n    \\\"build\\\": \\\"vite build\\\",\n    \\\"preview\\\": \\\"vite preview\\\"\n  },\n  \\\"dependencies\\\": {\n    \\\"vue\\\": \\\"^3.5.0\\\",\n    \\\"element-plus\\\": \\\"^2.10.0\\\",\n    \\\"vue-router\\\": \\\"^4.4.0\\\"\n  },\n  \\\"devDependencies\\\": {\n    \\\"vite\\\": \\\"^6.0.0\\\",\n    \\\"@vitejs/plugin-vue\\\": \\\"^5.1.0\\\",\n    \\\"sass\\\": \\\"^1.77.0\\\"\n  }\n}\",\n  \"smartwatch-shop/index.html\": \"<!DOCTYPE html>\n<html lang=\\\"zh-CN\\\">\n  <head>\n    <meta charset=\\\"UTF-8\\\" />\n    <link rel=\\\"icon\\\" type=\\\"image/svg+xml\\\" href=\\\"/favicon.ico\\\" />\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\" />\n    <title>智能手表 - 科技改变生活</title>\n    <!-- 引入Element Plus图标 -->\n    <link rel=\\\"stylesheet\\\" href=\\\"https://cdn.jsdelivr.net/npm/@element-plus/icons-vue@2.3.1/dist/index.css\\\">\n  </head>\n  <body>\n    <div id=\\\"app\\\"></div>\n    <script type=\\\"module\\\" src=\\\"/src/main.js\\\"></script>\n  </body>\n</html>\",\n  \"smartwatch-shop/vite.config.js\": \"import { defineConfig } from 'vite'\nimport vue from '@vitejs/plugin-vue'\nimport path from 'path'\n\n// https://vitejs.dev/config/\nexport default defineConfig({\n  plugins: [vue()],\n  resolve: {\n    alias: {\n      '@': path.resolve(__dirname, './src'),\n    },\n  },\n  server: {\n    port: 3000,\n    open: true\n  }\n})\",\n  \"smartwatch-shop/src/main.js\": \"import { createApp } from 'vue'\nimport App from './App.vue'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport './style/main.css'\n\n// 导入Element Plus图标\nimport * as ElementPlusIconsVue from '@element-plus/icons-vue'\n\nconst app = createApp(App)\n\n// 注册所有Element Plus图标\nfor (const [key, component] of Object.entries(ElementPlusIconsVue)) {\n  app.component(key, component)\n}\n\napp.use(ElementPlus)\napp.mount('#app')\",\n  \"smartwatch-shop/src/App.vue\": \"<template>\n  <div class=\\\"app-container\\\">\n    <!-- 顶部导航栏 -->\n    <nav-bar />\n    \n    <main class=\\\"product-detail-container\\\">\n      <div class=\\\"product-main\\\">\n        <!-- 产品轮播图 -->\n        <product-gallery :images=\\\"product.images\\\" />\n        \n        <!-- 产品信息区域 -->\n        <div class=\\\"product-info-container\\\">\n          <product-info \n            :name=\\\"product.name\\\" \n            :price=\\\"product.price\\\" \n            :original-price=\\\"product.originalPrice\\\" \n            :sales-count=\\\"product.salesCount\\\" \n          />\n          \n          <!-- 规格选择器 -->\n          <specification-selector \n            :specifications=\\\"product.specifications\\\" \n            v-model:selected-specs=\\\"selectedSpecs\\\" \n            @stock-change=\\\"updateStock\\\"\n          />\n          \n          <!-- 库存提示 -->\n          <div class=\\\"stock-info\\\" v-if=\\\"selectedSpecs.size && selectedSpecs.color\\\">\n            库存: <span class=\\\"stock-count\\\">{{ currentStock }}件</span>\n          </div>\n        </div>\n      </div>\n      \n      <!-- 产品详情标签页 -->\n      <product-tabs>\n        <!-- 产品参数 -->\n        <template #parameters>\n          <parameter-table :parameters=\\\"product.parameters\\\" />\n        </template>\n        \n        <!-- 使用场景 -->\n        <template #scenarios>\n          <scenario-gallery :images=\\\"product.scenarioImages\\\" />\n        </template>\n        \n        <!-- 用户评价 -->\n        <template #reviews>\n          <review-list :reviews=\\\"product.reviews\\\" />\n        </template>\n      </product-tabs>\n    </main>\n  </div>\n  \n  <!-- 底部操作栏 -->\n  <action-bar \n    :quantity=\\\"quantity\\\" \n    @quantity-change=\\\"updateQuantity\\\"\n    @add-to-cart=\\\"addToCart\\\"\n    @buy-now=\\\"buyNow\\\"\n  />\n  \n  <!-- 售后保障 -->\n  <after-sale-service :services=\\\"afterSaleServices\\\" />\n</template>\n\n<script setup>\nimport { ref, reactive } from 'vue'\nimport NavBar from './components/NavBar.vue'\nimport ProductGallery from './components/ProductGallery.vue'\nimport ProductInfo from './components/ProductInfo.vue'\nimport SpecificationSelector from './components/SpecificationSelector.vue'\nimport ProductTabs from './components/ProductTabs.vue'\nimport ParameterTable from './components/ParameterTable.vue'\nimport ScenarioGallery from './components/ScenarioGallery.vue'\nimport ReviewList from './components/ReviewList.vue'\nimport ActionBar from './components/ActionBar.vue'\nimport AfterSaleService from './components/AfterSaleService.vue'\n\n// 产品数据\nconst product = reactive({\n  name: 'Ultra智能手表 Series 8 - 全场景健康监测',\n  price: 1599,\n  originalPrice: 1899,\n  salesCount: 1258,\n  images: [\n    'https://picsum.photos/id/1/600/600',\n    'https://picsum.photos/id/2/600/600',\n    'https://picsum.photos/id/3/600/600',\n    'https://picsum.photos/id/4/600/600',\n    'https://picsum.photos/id/5/600/600'\n  ],\n  specifications: {\n    color: [\n      { name: '星空黑', value: 'black', stock: 120 },\n      { name: '月光银', value: 'silver', stock: 85 },\n      { name: '深空灰', value: 'gray', stock: 42 }\n    ],\n    size: [\n      { name: '42mm', value: '42mm', stock: 150 },\n      { name: '46mm', value: '46mm', stock: 97 }\n    ]\n  },\n  parameters: [\n    { name: '品牌', value: 'Ultra' },\n    { name: '型号', value: 'Series 8' },\n    { name: '屏幕尺寸', value: '1.78英寸AMOLED' },\n    { name: '分辨率', value: '454 x 454像素' },\n    { name: '处理器', value: '双核处理器' },\n    { name: '内存', value: '1GB RAM' },\n    { name: '存储', value: '32GB' },\n    { name: '电池容量', value: '300mAh' },\n    { name: '续航时间', '常规使用7天，重度使用3天' },\n    { name: '防水等级', '50米防水' },\n    { name: '连接方式', '蓝牙5.2，Wi-Fi' },\n    { name: '传感器', '心率传感器，血氧传感器，加速度传感器，陀螺仪' },\n    { name: '操作系统', 'WatchOS 10' },\n    { name: '兼容系统', 'iOS 14.0+，Android 8.0+' }\n  ],\n  scenarioImages: [\n    'https://picsum.photos/id/10/1200/800',\n    'https://picsum.photos/id/11/1200/800',\n    'https://picsum.photos/id/12/1200/800',\n    'https://picsum.photos/id/13/1200/800'\n  ],\n  reviews: [\n    {\n      id: 1,\n      user: '张先生',\n      avatar: 'https://picsum.photos/id/20/100/100',\n      rating: 5,\n      date: '2023-10-15',\n      content: '手表非常漂亮，功能强大，续航也不错，充一次电用了5天还有30%的电。健康监测功能很准，推荐购买！',\n      images: [\n        'https://picsum.photos/id/30/400/400',\n        'https://picsum.photos/id/31/400/400'\n      ]\n    },\n    {\n      id: 2,\n      user: '李女士',\n      avatar: 'https://picsum.photos/id/21/100/100',\n      rating: 4,\n      date: '2023-10-10',\n      content: '外观时尚，操作流畅，就是表带有点硬，戴久了不太舒服。整体来说性价比很高。',\n      images: [\n        'https://picsum.photos/id/32/400/400'\n      ]\n    },\n    {\n      id: 3,\n      user: '王先生',\n      avatar: 'https://picsum.photos/id/22/100/100',\n      rating: 5,\n      date: '2023-10-05',\n      content: '功能齐全，心率、血氧监测都很准，运动模式也很多。睡眠监测帮我改善了睡眠质量，非常满意！',\n      images: []\n    }\n  ]\n})\n\n// 状态管理\nconst selectedSpecs = ref({\n  color: '',\n  size: ''\n})\nconst currentStock = ref(0)\nconst quantity = ref(1)\nconst afterSaleServices = [\n  { icon: 'Clock', title: '7天无理由退货', description: '收到商品7天内，不影响二次销售可退货' },\n  { icon: 'RefreshRight', title: '15天质量问题换货', description: '15天内出现质量问题，可免费更换新机' },\n  { icon: 'Truck', title: '全国联保', description: '官方授权服务中心，全国联保1年' },\n  { icon: 'Help', title: '专业客服', description: '7×24小时在线客服，随时解答疑问' }\n]\n\n// 方法\nfunction updateStock(stock) {\n  currentStock.value = stock\n}\n\nfunction updateQuantity(count) {\n  if (count > currentStock.value && currentStock.value > 0) {\n    quantity.value = currentStock.value\n    return\n  }\n  quantity.value = count\n}\n\nfunction addToCart() {\n  if (!selectedSpecs.value.color || !selectedSpecs.value.size) {\n    ElMessage.warning('请选择产品规格')\n    return\n  }\n  \n  if (quantity.value > currentStock.value) {\n    ElMessage.warning('购买数量不能超过库存')\n    return\n  }\n  \n  ElMessage.success('已加入购物车')\n  // 实际项目中这里会调用购物车API\n}\n\nfunction buyNow() {\n  if (!selectedSpecs.value.color || !selectedSpecs.value.size) {\n    ElMessage.warning('请选择产品规格')\n    return\n  }\n  \n  if (quantity.value > currentStock.value) {\n    ElMessage.warning('购买数量不能超过库存')\n    return\n  }\n  \n  ElMessage.info('跳转到结算页面')\n  // 实际项目中这里会跳转到结算页面\n}\n</script>\n\n<style scoped>\n.app-container {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n}\n\n.product-detail-container {\n  flex: 1;\n  width: 1200px;\n  margin: 0 auto;\n  padding: 20px 0;\n}\n\n.product-main {\n  display: flex;\n  gap: 30px;\n  margin-bottom: 40px;\n}\n\n.product-info-container {\n  flex: 1;\n}\n\n.stock-info {\n  margin: 15px 0;\n  color: #606266;\n  font-size: 14px;\n}\n\n.stock-count {\n  color: #409EFF;\n  font-weight: 500;\n}\n\n@media (max-width: 1200px) {\n  .product-detail-container {\n    width: 100%;\n    padding: 20px;\n  }\n}\n\n@media (max-width: 768px) {\n  .product-main {\n    flex-direction: column;\n  }\n}\n</style>\",\n  \"smartwatch-shop/src/components/NavBar.vue\": \"<template>\n  <header class=\\\"navbar-container\\\">\n    <div class=\\\"navbar-content\\\">\n      <!-- 品牌Logo -->\n      <div class=\\\"brand-logo\\\">\n        <h1>UltraWatch</h1>\n      </div>\n      \n      <!-- 导航菜单 -->\n      <nav class=\\\"main-nav\\\">\n        <ul class=\\\"nav-list\\\">\n          <li class=\\\"nav-item\\\"><a href=\\\"#\\\" class=\\\"nav-link active\\\">首页</a></li>\n          <li class=\\\"nav-item\\\"><a href=\\\"#\\\" class=\\\"nav-link\\\">全部产品</a></li>\n          <li class=\\\"nav-item\\\"><a href=\\\"#\\\" class=\\\"nav-link\\\">新品上市</a></li>\n          <li class=\\\"nav-item\\\"><a href=\\\"#\\\" class=\\\"nav-link\\\">优惠活动</a></li>\n          <li class=\\\"nav-item\\\"><a href=\\\"#\\\" class=\\\"nav-link\\\">支持</a></li>\n        </ul>\n      </nav>\n      \n      <!-- 右侧功能区 -->\n      <div class=\\\"nav-actions\\\">\n        <!-- 搜索框 -->\n        <div class=\\\"search-box\\\">\n          <el-input \n            placeholder=\\\"搜索产品...\\\" \n            size=\\\"small\\\" \n            prefix-icon=\\\"Search\\\"\n            class=\\\"search-input\\\"\n          />\n        </div>\n        \n        <!-- 购物车图标 -->\n        <div class=\\\"cart-icon\\\">\n          <el-badge :value=\\\"cartCount\\\" class=\\\"cart-badge\\\">\n            <el-icon class=\\\"icon\\\"><ShoppingCart /></el-icon>\n          </el-badge>\n        </div>\n        \n        <!-- 用户中心 -->\n        <div class=\\\"user-icon\\\">\n          <el-icon class=\\\"icon\\\"><User /></el-icon>\n        </div>\n      </div>\n    </div>\n  </header>\n</template>\n\n<script setup>\nimport { ref } from 'vue'\nimport { ShoppingCart, User, Search } from '@element-plus/icons-vue'\n\nconst cartCount = ref(3)\n</script>\n\n<style scoped>\n.navbar-container {\n  background-color: #fff;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  position: sticky;\n  top: 0;\n  z-index: 100;\n}\n\n.navbar-content {\n  width: 1200px;\n  margin: 0 auto;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: 60px;\n  padding: 0 20px;\n}\n\n.brand-logo {\n  font-size: 24px;\n  font-weight: 700;\n  color: #1a73e8;\n}\n\n.nav-list {\n  display: flex;\n  list-style: none;\n  padding: 0;\n  margin: 0;\n}\n\n.nav-item {\n  margin: 0 15px;\n}\n\n.nav-link {\n  text-decoration: none;\n  color: #333;\n  font-size: 14px;\n  font-weight: 500;\n  padding: 5px 0;\n  position: relative;\n}\n\n.nav-link.active {\n  color: #1a73e8;\n}\n\n.nav-link.active::after {\n  content: '';\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 2px;\n  background-color: #1a73e8;\n}\n\n.nav-link:hover {\n  color: #1a73e8;\n}\n\n.nav-actions {\n  display: flex;\n  align-items: center;\n  gap: 20px;\n}\n\n.search-box {\n  width: 200px;\n}\n\n.search-input {\n  --el-input-height: 32px;\n}\n\n.cart-icon, .user-icon {\n  cursor: pointer;\n  color: #606266;\n  position: relative;\n}\n\n.icon {\n  font-size: 20px;\n}\n\n.cart-badge {\n  --el-badge-height: 18px;\n  --el-badge-font-size: 12px;\n}\n\n@media (max-width: 1200px) {\n  .navbar-content {\n    width: 100%;\n  }\n}\n\n@media (max-width: 768px) {\n  .main-nav {\n    display: none;\n  }\n  \n  .search-box {\n    width: 120px;\n  }\n}\n</style>\",\n  \"smartwatch-shop/src/components/ProductGallery.vue\": \"<template>\n  <div class=\\\"product-gallery\\\">\n    <el-carousel \n      :interval=\\\"5000\\\" \n      height=\\\"500px\\\" \n      indicator-position=\\\"right\\\"\n      class=\\\"main-carousel\\\"\n    >\n      <el-carousel-item v-for=\\\"(image, index) in images\\\" :key=\\\"index\\\">\n        <img \n          :src=\\\"image\\\" \n          alt=\\\"产品图片\\\" \n          class=\\\"product-image\\\"\n          @click=\\\"openPreview(index)\\\"\n        />\n      </el-carousel-item>\n    </el-carousel>\n    \n    <!-- 预览弹窗 -->\n    <el-dialog \n      v-model=\\\"previewVisible\\\" \n      :fullscreen=\\\"true\\\" \n      :show-close=\\\"true\\\"\n      class=\\\"image-preview-dialog\\\"\n    >\n      <el-carousel \n        v-if=\\\"previewVisible\\\"\n        :interval=\\\"0\\\" \n        height=\\\"100%\\\"\n        :initial-index=\\\"previewIndex\\\"\n      >\n        <el-carousel-item v-for=\\\"(image, index) in images\\\" :key=\\\"index\\\">\n          <img :src=\\\"image\\\" alt=\\\"产品图片\\\" class=\\\"preview-image\\\" />\n        </el-carousel-item>\n      </el-carousel>\n    </el-dialog>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue'\n\nconst props = defineProps({\n  images: {\n    type: Array,\n    required: true,\n    default: () => []\n  }\n})\n\nconst previewVisible = ref(false)\nconst previewIndex = ref(0)\n\nfunction openPreview(index) {\n  previewIndex.value = index\n  previewVisible.value = true\n}\n</script>\n\n<style scoped>\n.product-gallery {\n  width: 500px;\n  flex-shrink: 0;\n}\n\n.main-carousel {\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);\n}\n\n.product-image {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  cursor: zoom-in;\n  transition: transform 0.3s ease;\n}\n\n.product-image:hover {\n  transform: scale(1.02);\n}\n\n.image-preview-dialog {\n  padding: 0;\n  background-color: rgba(0, 0, 0, 0.9);\n}\n\n.preview-image {\n  width: 100%;\n  height: 100%;\n  object-fit: contain;\n}\n\n@media (max-width: 768px) {\n  .product-gallery {\n    width: 100%;\n  }\n  \n  .main-carousel {\n    height: 300px;\n  }\n}\n</style>\",\n  \"smartwatch-shop/src/components/ProductInfo.vue\": \"<template>\n  <div class=\\\"product-info\\\">\n    <h1 class=\\\"product-name\\\">{{ name }}</h1>\n    \n    <div class=\\\"product-price\\\">\n      <span class=\\\"current-price\\\">¥{{ price.toFixed(2) }}</span>\n      <span class=\\\"original-price\\\" v-if=\\\"originalPrice\\\">¥{{ originalPrice.toFixed(2) }}</span>\n    </div>\n    \n    <div class=\\\"product-meta\\\">\n      <span class=\\\"sales-count\\\">已售 {{ formatSalesCount(salesCount) }}件</span>\n      <span class=\\\"separator\\\">|</span>\n      <span class=\\\"rating\\\">\n        <el-rate v-model=\"ratingValue\" disabled :max=\"5\" :allow-half=\"true\" size=\"small\" />\n        <span class=\"rating-text\">(4.9)</span>\n      </span>\n      <span class=\"separator\">|</span>\n      <span class=\"store-name\">Ultra官方旗舰店</span>\n    </div>\n    \n    <div class=\\\"product-tags\\\">\n      <el-tag type=\\\"primary\\\" size=\\\"small\\\">新品</el-tag>\n      <el-tag type=\\\"success\\\" size=\\\"small\\\">限时优惠</el-tag>\n      <el-tag type=\\\"info\\\" size=\\\"small\\\">赠运费险</el-tag>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue'\n\nconst props = defineProps({\n  name: {\n    type: String,\n    required: true\n  }, \n  price: {\n    type: Number,\n    required: true\n  },\n  originalPrice: {\n    type: Number,\n    required: false\n  },\n  salesCount: {\n    type: Number,\n    required: false,\n    default: 0\n  }\n})\n\nconst ratingValue = ref(4.9)\n\nfunction formatSalesCount(count) {\n  if (count >= 10000) {\n    return (count / 10000).toFixed(1) + '万'\n  }\n  return count\n}\n</script>\n\n<style scoped>\n.product-info {\n  margin-bottom: 25px;\n}\n\n.product-name {\n  font-size: 24px;\n  color: #333;\n  margin-bottom: 15px;\n  line-height: 1.3;\n}\n\n.product-price {\n  margin-bottom: 15px;\n  display: flex;\n  align-items: center;\n  gap: 15px;\n}\n\n.current-price {\n  font-size: 28px;\n  font-weight: 700;\n  color: #f56c6c;\n}\n\n.original-price {\n  font-size: 16px;\n  color: #909399;\n  text-decoration: line-through;\n}\n\n.product-meta {\n  font-size: 14px;\n  color: #606266;\n  margin-bottom: 15px;\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 10px 15px;\n}\n\n.separator {\n  color: #e0e0e0;\n}\n\n.rating {\n  display: flex;\n  align-items: center;\n  gap: 5px;\n}\n\n.rating-text {\n  color: #606266;\n}\n\n.store-name {\n  color: #409eff;\n  cursor: pointer;\n}\n\n.product-tags {\n  margin-top: 15px;\n  display: flex;\n  gap: 8px;\n}\n</style>\",\n  \"smartwatch-shop/src/components/SpecificationSelector.vue\": \"<template>\n  <div class=\\\"specification-selector\\\">\n    <div class=\\\"spec-group\\\" v-for=\\\"(specGroup, index) in specifications\\\" :key=\\\"index\\\">\n      <h3 class=\\\"spec-title\\\">{{ getSpecGroupName(specGroup.name) }}:</h3>\n      <div class=\\\"spec-options\\\">\n        <div \n          v-for=\\\"option in specGroup.options\\\" \n          :key=\\\"option.value\\\"\n          class=\\\"spec-option\\\"\n          :class=\\\"{ \n            'selected': isSelected(specGroup.name, option.value),\n            'disabled': !option.stock \n          }\\\"\n          @click=\\\"selectOption(specGroup.name, option.value)\\\"\n          v-if=\\\"option.stock > 0 || showOutOfStock\\\"\n        >\n          <span class=\\\"option-text\\\">{{ option.name }}</span>\n          <span class=\\\"stock-indicator\\\" v-if=\\\"!option.stock\\\">缺货</span>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { computed, watch } from 'vue'\n\nconst props = defineProps({\n  specifications: {\n    type: Object,\n    required: true\n  },\n  modelValue: {\n    type: Object,\n    required: true,\n    default: () => ({})\n  },\n  showOutOfStock: {\n    type: Boolean,\n    default: false\n  }\n})\n\nconst emit = defineEmits(['update:modelValue', 'stock-change'])\n\n// 计算属性，用于获取当前选中的规格\nconst selectedSpecs = computed({\n  get: () => props.modelValue,\n  set: (value) => {\n    emit('update:modelValue', value)\n  }\n})\n\n// 监听选中规格变化，更新库存信息\nwatch(\n  () => selectedSpecs.value,\n  (newVal) => {\n    // 在实际项目中，这里应该根据选中的规格组合查询库存\n    // 简化处理：假设每个规格选项的stock就是该规格的库存\n    let stock = 0\n    if (newVal.color && newVal.size) {\n      const colorOption = props.specifications.color.find(o => o.value === newVal.color)\n      const sizeOption = props.specifications.size.find(o => o.value === newVal.size)\n      // 取两个规格中库存较小的那个\n      stock = Math.min(colorOption.stock, sizeOption.stock)\n    }\n    emit('stock-change', stock)\n  },\n  { deep: true }\n)\n\n// 辅助方法\nfunction getSpecGroupName(key) {\n  const names = {\n    color: '颜色',\n    size: '尺寸'\n  }\n  return names[key] || key\n}\n\nfunction isSelected(groupName, value) {\n  return selectedSpecs.value[groupName] === value\n}\n\nfunction selectOption(groupName, value) {\n  const specGroup = props.specifications[groupName]\n  const option = specGroup.options.find(o => o.value === value)\n  \n  // 如果选项缺货，不允许选择\n  if (!option.stock) return\n  \n  // 更新选中的规格\n  selectedSpecs.value = {\n    ...selectedSpecs.value,\n    [groupName]: value\n  }\n}\n</script>\n\n<style scoped>\n.specification-selector {\n  margin: 25px 0;\n}\n\n.spec-group {\n  margin-bottom: 20px;\n}\n\n.spec-title {\n  font-size: 14px;\n  color: #606266;\n  margin-bottom: 10px;\n  font-weight: 500;\n}\n\n.spec-options {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n}\n\n.spec-option {\n  border: 1px solid #e0e0e0;\n  border-radius: 4px;\n  padding: 8px 15px;\n  font-size: 14px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  position: relative;\n  min-width: 60px;\n  text-align: center;\n}\n\n.spec-option:hover:not(.disabled) {\n  border-color: #409eff;\n}\n\n.spec-option.selected {\n  border-color: #409eff;\n  background-color: rgba(64, 158, 255, 0.05);\n  color: #409eff;\n  font-weight: 500;\n}\n\n.spec-option.selected::after {\n  content: '';\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  width: 16px;\n  height: 16px;\n  background: url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1024 1024'%3E%3Cpath fill='%23409eff' d='M816 320c17.7 0 32 14.3 32 32v448c0 17.7-14.3 32-32 32H208c-17.7 0-32-14.3-32-32V352c0-17.7 14.3-32 32-32h608zM470.6 685.4l-94.3-91.1c-1.5-1.4-3.6-2.3-5.9-2.3-2.3 0-4.4 0.9-5.9 2.3L192 785.4V832h640v-46.6L617.4 685.4z'/%3E%3C/svg%3E\\\") no-repeat;\n  background-size: contain;\n}\n\n.spec-option.disabled {\n  color: #c0c4cc;\n  cursor: not-allowed;\n  background-color: #f5f5f5;\n}\n\n.stock-indicator {\n  position: absolute;\n  top: 0;\n  right: 0;\n  background-color: #f5f5f5;\n  color: #c0c4cc;\n  font-size: 10px;\n  padding: 0 4px;\n  border-radius: 0 0 0 4px;\n}\n</style>\",\n  \"smartwatch-shop/src/components/ProductTabs.vue\": \"<template>\n  <div class=\\\"product-tabs\\\">\n    <el-tabs v-model=\\\"activeTab\\\" class=\\\"detail-tabs\\\" @tab-change=\\\"handleTabChange\\\">\n      <el-tab-pane label=\\\"产品参数\\\" name=\\\"parameters\\\" class=\\\"tab-pane\\\" />\n      <el-tab-pane label=\\\"使用场景\\\" name=\\\"scenarios\\\" class=\\\"tab-pane\\\" />\n      <el-tab-pane label=\\\"用户评价\\\" name=\\\"reviews\\\" class=\\\"tab-pane\\\" />\n    </el-tabs>\n    \n    <div class=\\\"tab-content\\\">\n      <slot name=\\\"parameters\\\" v-if=\\\"activeTab === 'parameters'\\\" />\n      <slot name=\\\"scenarios\\\" v-if=\\\"activeTab === 'scenarios'\\\" />\n      <slot name=\\\"reviews\\\" v-if=\\\"activeTab === 'reviews'\\\" />\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue'\n\nconst activeTab = ref('parameters')\n\nfunction handleTabChange(tab) {\n  activeTab.value = tab\n  // 滚动到标签页内容顶部\n  document.querySelector('.tab-content').scrollIntoView({ behavior: 'smooth' })\n}\n</script>\n\n<style scoped>\n.product-tabs {\n  margin-top: 40px;\n  border-top: 1px solid #f0f0f0;\n}\n\n.detail-tabs {\n  margin-top: 20px;\n}\n\n.el-tabs__nav {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  border-bottom: 1px solid #e0e0e0;\n}\n\n.el-tabs__item {\n  padding: 15px 30px;\n  font-size: 16px;\n  font-weight: 500;\n}\n\n.el-tabs__item.is-active {\n  color: #1a73e8;\n}\n\n.el-tabs__active-bar {\n  background-color: #1a73e8;\n  height: 3px;\n}\n\n.tab-content {\n  padding: 30px 20px;\n}\n</style>\",\n  \"smartwatch-shop/src/components/ParameterTable.vue\": \"<template>\n  <div class=\\\"parameter-table\\\">\n    <el-table :data=\"formattedParameters\" border style=\"width: 100%\">\n      <el-table-column prop=\"name\" label=\"参数名称\" width=\"30%\" />\n      <el-table-column prop=\"value\" label=\"参数值\" width=\"70%\" />\n    </el-table>\n  </div>\n</template>\n\n<script setup>\nimport { computed } from 'vue'\n\nconst props = defineProps({\n  parameters: {\n    type: Array,\n    required: true,\n    default: () => []\n  }\n})\n\nconst formattedParameters = computed(() => {\n  // 将参数数组转换为表格需要的格式\n  return props.parameters.map(param => ({\n    name: param.name,\n    value: param.value\n  }))\n})\n</script>\n\n<style scoped>\n.parameter-table {\n  margin-top: 20px;\n}\n\n.el-table {\n  border-radius: 4px;\n}\n\n.el-table th {\n  background-color: #f5f7fa;\n  font-weight: 500;\n}\n\n.el-table td, .el-table th {\n  padding: 12px",
  "responseLength": 22187,
  "extractedLength": 22187,
  "firstChars": "{\n  \"smartwatch-shop/package.json\": \"{\n  \\\"name\\\": \\\"smartwatch-shop\\\",\n  \\\"private\\\": true,\n  \\\"version\\\": \\\"0.0.0\\\",\n  \\\"type\\\": \\\"module\\\",\n  \\\"scripts\\\": {\n    \\\"dev\\\": \\\"vite\\\",\n    \\\"build\\\": \\\"vite build\\\",\n    \\\"preview\\\": \\\"vite preview\\\"\n  },\n  \\\"dependencies\\\": {\n    \\\"vue\\\": \\\"^3.5.0\\\",\n    \\\"element-plus\\\": \\\"^2.10.0\\\",\n    \\\"vue-router\\\": \\\"^4.4.0\\\"\n  },\n  \\\"devDependencies\\\": {\n    \\\"vite\\\": \\\"^6.0.0\\\",\n    \\\"@vitejs/plugin-vue\\\": \\\"^5.1.0\\\",\n    \\\"sass\\\": \\\"^1.77.0\\\"\n  }\n}\",\n  \"s",
  "lastChars": "rom 'vue'\n\nconst props = defineProps({\n  parameters: {\n    type: Array,\n    required: true,\n    default: () => []\n  }\n})\n\nconst formattedParameters = computed(() => {\n  // 将参数数组转换为表格需要的格式\n  return props.parameters.map(param => ({\n    name: param.name,\n    value: param.value\n  }))\n})\n</script>\n\n<style scoped>\n.parameter-table {\n  margin-top: 20px;\n}\n\n.el-table {\n  border-radius: 4px;\n}\n\n.el-table th {\n  background-color: #f5f7fa;\n  font-weight: 500;\n}\n\n.el-table td, .el-table th {\n  padding: 12px",
  "canBeUsedForTesting": true
}